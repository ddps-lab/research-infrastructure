# code:language=ansible
- name: Configure monitoring in k8s cluster
  hosts: first-kube-master
  gather_facts: false
  tasks:
    - name: Add kube-promethemus helm repo
      ansible.builtin.shell: |
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo update
      changed_when: false
    - name: Wait for creating NLB
      ansible.builtin.shell: |
        set -o pipefail
        kubectl get pods -A | grep ingress-nginx-controller | grep Running | awk '{print $4}'
      args:
        executable: /bin/bash
      register: command_result
      until: command_result.stdout == "Running"
      retries: 30
      delay: 10
      changed_when: false
    - name: Get Load balancer DNS name
      ansible.builtin.shell: |
        set -o pipefail
        kubectl get svc -A | grep ingress-nginx-controller | grep LoadBalancer | awk '{print $5}'
      register: lb_dns_address
      changed_when: false
      args:
        executable: /bin/bash
    - name: Apply kube-prometheus-stack by helm
      ansible.builtin.shell: |
        helm inspect values prometheus-community/kube-prometheus-stack > ./kube-prometheus-stack.values
        helm install prometheus-community/kube-prometheus-stack \
        --create-namespace --namespace monitoring \
        --generate-name --values ./kube-prometheus-stack.values \
        --set grafana.ingress.enabled=true \
        --set grafana.ingress.ingressClassName=nginx \
        --set grafana.ingress.paths={/} \
        --set grafana.ingress.hosts={'{{ lb_dns_address.stdout }}'} \
        --set prometheus.prometheusSpec.serviceMonitorSelectorNilUsesHelmValues=false \
        --set prometheus.prometheusSpec.podMonitorSelectorNilUsesHelmValues=false
      changed_when: false
